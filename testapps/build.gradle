buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

plugins {
    id 'io.qameta.allure' version '2.5'
}

group 'com.github.lexpalych'
version '1.0'

subprojects {
    apply plugin: 'io.qameta.allure'

    allure {
        autoconfigure = true

        version = '2.13.1'

        useJUnit5 {
            version = '2.13.1'
        }
    }

    dependencies {
        implementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
        implementation "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
        implementation "org.junit.jupiter:junit-jupiter-params:${jupiterVersion}"

        implementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
        implementation "io.qameta.allure:allure-junit5:${allureJunitVersion}"
        implementation "io.rest-assured:rest-assured:${restAssuredVersion}"
        implementation "org.apache.httpcomponents:httpclient:${httpclientVersion}"

        implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
        implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"

        implementation project (":extensions:allure-junit5-extensions")
        implementation project (":extensions:allure-rest-assured")
        implementation project (":extensions:allure-steps")
        implementation project (":extensions:allure-webdriver")
        implementation project (":extensions:junit5-extensions")
    }

    //Параметр для javac, чтобы получать реальные имена переменных, а не синтетические arg0, arg1 и т.д.
    compileTestJava.options.compilerArgs = ['-parameters']

    //Если поект имеет проперти uitests, то в его папку ресурсов копируются исполняемые файлы WebDriver
    test {
        doFirst {
            if (project.hasProperty('uitests')) {
                copy {
                    String desc = 'Копирование исполняемых файлов WebDriver'
                    description desc
                    println desc

                    String driverReference ='\\resources\\main\\drivers'
                    String fromPath = getRootProject()
                                .findProject("${webDriverModuleName}")
                                .getBuildDir()
                                .getAbsolutePath() + driverReference

                    println "Из ${fromPath}"
                    from fromPath

                    String intoPath = project
                            .getBuildDir()
                            .getAbsolutePath() + driverReference

                    println "В ${intoPath}"
                    into intoPath
                }
            }
        }

        //Многопоточный запуск тестов
        test {
            useJUnitPlatform()

            //По умолчанию тесты запускаются многопоточно (true)
            systemProperties['junit.jupiter.execution.parallel.enabled'] = true
            systemProperties['junit.jupiter.execution.parallel.mode.default'] = 'concurrent'

            //Количесто потоков равно количесту ядер
            maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
        }

        //Конфиг логирования
        println 'Устанока проперти конфигурации логирования'
        systemProperties["log4j2.configurationFactory"] = "${configurationFactoryPath}"
        systemProperties["log4j2.rootLogger.level"] = "info"
    }
}